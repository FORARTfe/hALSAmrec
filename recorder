#!/bin/sh

MNT=/tmp/mnt
recorder=""

trap 'true' SIGHUP

sleep infinity &
dummy=$!

trap '	kill $dummy;
	[ -n "$recorder" ] && kill $recorder;
	umount -l "$MNT";
	exit'	SIGTERM

first=0

while true; do
	if [ $first -eq 0 ]; then first=1; else
		if [ -n "$recorder" ]; then waiton=$recorder;
					else waiton=$dummy; fi
		wait $waiton
	fi
	card=$( arecord -l|grep '^card' )
	disk=/dev/sd?1
	[ -e $disk ] && [ -n "$card" ]
	ready=$?
	# PIDs can be reused, but this test is probably reliable enough
	# for our purposes:
	if [ -n "$recorder" -a ! -e /proc/$recorder ]; then recorder=""; fi
	if [ $ready -ne 0 ]; then
		if [ -n "$recorder" ]; then
			# recording's still running but something's
			# been disconnected; try to clean up:
			# openwrt actually seems to unmount automatically,
			# but, just to be sure:
			umount -l "$MNT"
			kill -9 $recorder
			recorder=""
		fi
		continue
	fi
	if [ -n "$recorder" ]; then continue; fi
	# openwrt seems to delete mountpoints on unmount automatically,
	# so we need to recate it here:
	mkdir -p "$MNT"
	mount $disk "$MNT" || continue
	while true; do
		name=$(date +"%Y-%m-%d-%Hh%Mm%Ss")
		logfile="/${MNT}/${name}.log"
		if [ ! -e "$logfile" ]; then break; fi
		sleep 1
	done
	{
		# probably better to parse $device somehow.  Should get
		# channel count and other parameters automatically too.
		# snippet originally taken from
		# https://askubuntu.com/questions/868266/how-to-record-multitrack-indefinitely
		arecord --device=hw:0,0 --channels=18 --file-type=raw \
		        --format=S32_LE --rate=44100 --buffer-time=20000000 \
			> "${MNT}/${name}.raw" 2> >(ts -s >&2) &
		recorder=$!

	} # >"$logfile" 2>&1
done
